name: CI/CD

on:
  push:

jobs:
  linting_testing:
    runs-on: ubuntu-latest
    name: Lint Python code and run tests
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.16"
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install -d
      - name: Lint Python code
        run: pipenv run pylint ur_operator -E
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.1
      - name: Lint Helm chart
        run: helm lint helm/uptimerobot-operator
      - name: Execute unit tests
        run: pipenv run pytest tests/test_unit.py
      - name: Set up kind cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          image: kindest/node:v1.19.1
      - name: Execute E2E tests
        env:
          UPTIMEROBOT_API_KEY: ${{ secrets.UPTIMEROBOT_API_KEY }}
        run: |
          # for some reason tests fail when starting them with a single command
          # that's why we are looping here
          for test in tests/test_e2e*.py; do
            pipenv run pytest $test
          done

  build_docker_image:
    runs-on: ubuntu-latest
    needs: linting_testing
    name: Build and push Docker image
    steps:
      - uses: actions/checkout@v2
      - uses: nelonoel/branch-name@v1.0.1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: set tags
        id: set-tags
        run: |
          IMAGENAME=$(echo ${{ github.repository }} | sed 's/${{ github.repository_owner }}\///g')
          if [ "${{ github.ref }}" == "refs/heads/master" ] && [ "${{ github.event_name }}" == "push" ]; then
            VERSION="${{ env.BRANCH_NAME }}"
            TAGS="ghcr.io/${{ github.repository_owner }}/${IMAGENAME}:${VERSION}"
          elif  [ "${{ github.ref }}" == "refs/tags/v* "] && [ "${{ github.event_name }}" == "push" ]; then
            VERSION="${GITHUB_REF##*/}"
            TAGS="ghcr.io/${{ github.repository_owner }}/${IMAGENAME}:latest,ghcr.io/${{ github.repository_owner }}/${IMAGENAME}:${VERSION}"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "imagename=${IMAGENAME}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./Dockerfile
          platforms: "linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64"
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.set-tags.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ steps.set-tags.outputs.imagename }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.set-tags.outputs.version }}
            org.opencontainers.image.created=${{ steps.set-tags.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

  build_helm_chart:
    runs-on: ubuntu-latest
    needs: linting_testing
    name: Package and push Helm chart
    steps:
      - name: Checkout uptimerobot-operator
        uses: actions/checkout@v2
        with:
          path: uptimerobot-operator
      - name: Checkout Helm chart index
        uses: actions/checkout@v2
        with:
          path: helm-chart-index
          ref: helm-chart-index
      - name: Configure Git
        working-directory: helm-chart-index
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.1
      - name: Package Helm chart
        working-directory: helm-chart-index/helm
        run: helm package ../../uptimerobot-operator/helm/uptimerobot-operator
      - name: Update repo index
        working-directory: helm-chart-index/helm
        run: helm repo index . --merge index.yaml --url https://brennerm.github.io/uptimerobot-operator/helm
      - name: Release Helm chart
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        working-directory: helm-chart-index
        run: |
          git add helm
          git commit -m "Index update on $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin helm-chart-index
